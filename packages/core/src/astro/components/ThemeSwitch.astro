---
import { THEME_CONSTANTS } from "../../utils/constants.js";
---

<button
  id="theme-switch"
  type="button"
  class="theme-switch border-foreground bg-background relative h-10 w-20 rounded-full border-2 p-1 transition-colors duration-300"
  aria-label="Toggle dark mode"
>
  <div class="icons-container relative h-full w-full">
    <!-- Moon Icon -->
    <svg
      class="moon-icon absolute left-1 flex h-7 w-7 items-center justify-center"
      fill="currentColor"
      viewBox="0 0 20 20"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"
      ></path>
    </svg>
    <!-- Sun Icon -->
    <svg
      class="sun-icon absolute right-1 flex h-7 w-7 items-center justify-center"
      fill="currentColor"
      viewBox="0 0 20 20"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
      ></path>
    </svg>
    <!-- Sliding Indicator -->
    <div
      id="theme-switch-slider"
      class="slider bg-foreground absolute flex h-7 w-7 items-center justify-center rounded-full transition-all duration-300"
    >
      <!-- Selected Icon (Sun) -->
      <svg
        class="selected-sun-icon text-background h-5 w-5"
        fill="currentColor"
        viewBox="0 0 20 20"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
        ></path>
      </svg>
      <!-- Selected Icon (Moon) -->
      <svg
        class="selected-moon-icon text-background hidden h-5 w-5"
        fill="currentColor"
        viewBox="0 0 20 20"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"
        ></path>
      </svg>
    </div>
  </div>
</button>

<style>
  .theme-switch {
    cursor: pointer;
  }

  .theme-switch .icons-container {
    color: var(--color-foreground);
  }

  .theme-switch .slider {
    transform: translateX(0);
  }

  :global(.dark) .theme-switch .slider {
    transform: translateX(2.5rem);
  }

  .sun-icon,
  .moon-icon {
    opacity: 0.5;
    transition: all 0.3s ease;
  }

  /* Show/hide selected icons */
  .selected-sun-icon {
    opacity: 1;
    transform: scale(1);
    transition: all 0.3s ease;
  }

  .selected-moon-icon {
    opacity: 1;
    transform: scale(1);
    transition: all 0.3s ease;
  }

  :global(.dark) .selected-sun-icon {
    display: none;
  }

  :global(.dark) .selected-moon-icon {
    display: block;
  }

  /* Rise animation for active icon */
  .theme-switch:not(:global(.dark)) .sun-icon {
    opacity: 1;
    animation: rise 0.3s ease;
  }

  :global(.dark) .theme-switch .moon-icon {
    opacity: 1;
    animation: rise 0.3s ease;
  }

  @keyframes rise {
    0% {
      transform: translateY(0) scale(1);
    }
    50% {
      transform: translateY(-4px) scale(1.1);
    }
    100% {
      transform: translateY(0) scale(1);
    }
  }

  /* Hover effects */
  .theme-switch:hover .slider {
    transform: scale(1.05);
  }

  :global(.dark) .theme-switch:hover .slider {
    transform: translateX(2.5rem) scale(1.05);
  }
</style>

<script>
  const switchTranslateX = "translate-x-[2.5rem]";

  function setupThemeSwitch() {
    const themeSwitch = document.getElementById("theme-switch");
    const themeSwitchSlider = document.getElementById("theme-switch-slider");
    const selectedSunIcon = document.querySelector(".selected-sun-icon");
    const selectedMoonIcon = document.querySelector(".selected-moon-icon");

    // Set initial state
    if (document.documentElement.dataset.theme === "dark") {
      selectedSunIcon?.classList.add("hidden");
      selectedMoonIcon?.classList.remove("hidden");
    } else {
      themeSwitchSlider?.classList.add(switchTranslateX);
      selectedSunIcon?.classList.remove("hidden");
      selectedMoonIcon?.classList.add("hidden");
    }

    themeSwitch?.addEventListener("click", function () {
      // Toggle theme
      const isBecomingDark = document.documentElement.dataset.theme !== "dark";

      // Toggle selected icons
      if (isBecomingDark) {
        themeSwitchSlider?.classList.remove(switchTranslateX);
        selectedSunIcon?.classList.add("hidden");
        selectedMoonIcon?.classList.remove("hidden");
      } else {
        themeSwitchSlider?.classList.add(switchTranslateX);
        selectedSunIcon?.classList.remove("hidden");
        selectedMoonIcon?.classList.add("hidden");
      }

      // Update localStorage
      localStorage.theme = isBecomingDark ? "dark" : "light";
      document.documentElement.dataset.theme = isBecomingDark
        ? "dark"
        : "light";
    });
  }

  // Run setup when the DOM is ready
  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", setupThemeSwitch);
  } else {
    setupThemeSwitch();
  }
</script>

