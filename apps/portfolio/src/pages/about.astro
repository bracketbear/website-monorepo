---
import { Button, type Breadcrumb } from '@bracketbear/core';
import { getCollection } from 'astro:content';
import { getAboutBreadcrumbs } from '@/config/breadcrumbs';
import HeroLayout from '@/layouts/HeroLayout.astro';
import { marked } from 'marked';

const breadcrumbs: Breadcrumb[] = getAboutBreadcrumbs();

// Get the about page singleton (following the same pattern as index.astro)
const aboutPageEntries = await getCollection('portfolioAboutPage');
const aboutPage = aboutPageEntries[0]; // Singletons have only one entry
---

<HeroLayout title="About Me" hero={aboutPage.data.hero} breadcrumbs={breadcrumbs} animationPreset="curious-particle-network">
  <!-- Narrative Section (Story + Mission merged) -->
  {
    aboutPage?.data?.narrative && (
      <div class="mb-12">
        <div class="card">
          <h2 class="font-heading text-brand-dark mb-6 text-4xl tracking-tight">
            {aboutPage.data.narrative.title}
          </h2>
          <div class="text-brand-dark space-y-6 text-xl leading-relaxed font-medium prose prose-lg max-w-none">
            <Fragment set:html={marked.parse(aboutPage.data.narrative.content)} />
          </div>
        </div>
      </div>
    )
  }

  <!-- Skills Section (Three-column layout) -->
  {
    aboutPage?.data?.skills && (
      <div class="mb-12">
        <div class="grid grid-cols-1 gap-8 md:grid-cols-3">
          <!-- Core Strengths -->
          <div class="card">
            <h3 class="font-heading text-brand-dark mb-4 text-2xl tracking-tight">
              Core Strengths
            </h3>
            <ul class="text-brand-dark list-outside list-disc space-y-2 text-lg font-medium">
              {aboutPage.data.skills.coreStrengths.map((strength: string) => (
                <li class="ml-4">{strength}</li>
              ))}
            </ul>
          </div>

          <!-- Technical Expertise -->
          <div class="card">
            <h3 class="font-heading text-brand-dark mb-4 text-2xl tracking-tight">
              Technical Expertise
            </h3>
            <ul class="text-brand-dark list-outside list-disc space-y-2 text-lg font-medium">
              {aboutPage.data.skills.technicalExpertise.map((skill: string) => (
                <li class="ml-4">{skill}</li>
              ))}
            </ul>
          </div>

          <!-- Beyond Tech -->
          <div class="card">
            <h3 class="font-heading text-brand-dark mb-4 text-2xl tracking-tight">
              Beyond Tech
            </h3>
            <ul class="text-brand-dark list-outside list-disc space-y-2 text-lg font-medium">
              {aboutPage.data.skills.beyondTech.map((skill: string) => (
                <li class="ml-4">{skill}</li>
              ))}
            </ul>
          </div>
        </div>
      </div>
    )
  }

  <!-- Work Style Section (What I Do / How I Work) -->
  {
    aboutPage?.data?.workStyle && (
      <div class="mb-12">
        <div class="grid grid-cols-1 gap-8 md:grid-cols-2">
          <!-- What I Do -->
          <div class="card">
            <h3 class="font-heading text-brand-dark mb-4 text-2xl tracking-tight">
              {aboutPage.data.workStyle.whatIDo.title}
            </h3>
            <ol class="text-brand-dark list-inside list-decimal space-y-3 text-lg font-medium [&>li]:flex [&>li]:items-start [&>li]:gap-3">
              {aboutPage.data.workStyle.whatIDo.items.map(
                (item: any, index: number) => (
                  <li>
                    <span class="bg-brand-dark text-brand-light min-w-[2rem] px-2 py-1 text-center text-sm font-bold">
                      {item.number || String(index + 1).padStart(2, '0')}
                    </span>
                    {item.text}
                  </li>
                )
              )}
            </ol>
          </div>

          <!-- How I Work -->
          <div class="card">
            <h3 class="font-heading text-brand-dark mb-4 text-2xl tracking-tight">
              {aboutPage.data.workStyle.howIWork.title}
            </h3>
            <ol class="text-brand-dark list-inside list-decimal space-y-3 text-lg font-medium [&>li]:flex [&>li]:items-start [&>li]:gap-3">
              {aboutPage.data.workStyle.howIWork.items.map(
                (item: any, index: number) => (
                  <li>
                    <span class="bg-brand-dark text-brand-light min-w-[2rem] px-2 py-1 text-center text-sm font-bold">
                      {item.number || String(index + 1).padStart(2, '0')}
                    </span>
                    {item.text}
                  </li>
                )
              )}
            </ol>
          </div>
        </div>
      </div>
    )
  }

  <!-- Fun Facts Section (Optional) -->
  {
    aboutPage?.data?.funFacts && aboutPage.data.funFacts.length > 0 && (
      <div class="mb-12">
        <div class="card">
          <h2 class="font-heading text-brand-dark mb-6 text-4xl tracking-tight">
            Fun Facts
          </h2>
          <ul class="text-brand-dark list-outside list-disc space-y-3 text-lg font-medium">
            {aboutPage.data.funFacts.map((fact: string) => (
              <li class="ml-4">{fact}</li>
            ))}
          </ul>
        </div>
      </div>
    )
  }

  <!-- Contact CTA Section -->
  {
    aboutPage?.data?.contactCTA && (
      <div class="mb-12">
        <div class="card text-center">
          <p class="text-brand-dark mb-6 text-xl leading-relaxed font-medium">
            {aboutPage.data.contactCTA.text}
          </p>
          <Button variant="primary" size="lg">
            {aboutPage.data.contactCTA.buttonText}
          </Button>
        </div>
      </div>
    )
  }
</HeroLayout>

<style>
  /* Custom ordered list styling */
  ol {
    counter-reset: item;
  }

  ol > li {
    counter-increment: item;
  }

  ol > li::marker {
    content: counter(item, decimal-leading-zero);
    font-weight: bold;
    color: var(--color-brand-dark);
  }
</style>
