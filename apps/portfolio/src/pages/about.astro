---
import { type Breadcrumb } from '@bracketbear/core';
import { getCollection } from 'astro:content';
import { getAboutBreadcrumbs } from '@/config/breadcrumbs';
import HeroLayout from '@/layouts/HeroLayout.astro';
import { marked } from 'marked';
import { getContentImageUrl } from '@bracketbear/astro-content';
import { Testimonial, BulletList } from '@bracketbear/bear-ui-react';

const breadcrumbs: Breadcrumb[] = getAboutBreadcrumbs();

// Get the about page singleton (following the same pattern as index.astro)
const aboutPageEntries = await getCollection('portfolioAboutPage');
const aboutPage = aboutPageEntries[0]; // Singletons have only one entry

const t = aboutPage.data.testimonials[0];
---

<HeroLayout
  pageTitle="About"
  title={aboutPage.data.title}
  subtitle={aboutPage.data.subtitle}
  breadcrumbs={breadcrumbs}
  animationPreset="curious-particle-network"
  contactCTA={aboutPage.data.contactCTA}
  currentPage="about"
>
  <!-- Narrative Section -->
  {
    aboutPage?.data?.narrative && (
      <section class="px-content mb-8">
        <div class="container mx-auto text-center">
          <h2 class="font-heading text-foreground mb-6 text-5xl tracking-tight uppercase">
            {aboutPage.data.narrative.title}
          </h2>
        </div>
        <div class="container mx-auto mt-8">
          <div class="prose-2xl text-foreground/90 mx-auto max-w-prose">
            <Fragment
              set:html={marked.parse(aboutPage.data.narrative.content)}
            />
          </div>
        </div>
      </section>
    )
  }

  <!-- Timeline Section (after Narrative) -->
  {
    aboutPage?.data?.timeline && aboutPage.data.timeline.length > 0 && (
      <section class="px-content mt-40 mb-8">
        <div class="mx-auto max-w-6xl">
          <h2 class="font-heading text-foreground mb-10 text-center text-4xl tracking-tight uppercase">
            Timeline
          </h2>
          <div class="grid grid-cols-1 gap-6 md:grid-cols-3">
            {aboutPage.data.timeline.map((item: any) => (
              <div class="bg-brand-dark/90 border-border/20 rounded-lg border p-6 shadow-[0_4px_16px_0_rgba(0,0,0,0.3)] backdrop-blur-md md:p-8">
                <div class="flex flex-col gap-3">
                  <div class="text-xl font-semibold text-white">
                    {item.label}
                  </div>
                  {item.sublabel && (
                    <div class="text-base font-medium text-white/80">
                      {item.sublabel}
                    </div>
                  )}
                  <p class="text-base leading-relaxed text-white/90">
                    {item.description}
                  </p>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>
    )
  }

  <!-- What I Do Now Section -->
  {
    aboutPage?.data?.whatIDoNow && (
      <section class="px-content mt-40 mb-8">
        <div class="container mx-auto text-center">
          <h2 class="font-heading text-foreground mb-6 text-5xl tracking-tight uppercase">
            {aboutPage.data.whatIDoNow.title}
          </h2>
        </div>
        <div class="container mx-auto mt-8">
          <div class="prose-2xl text-foreground/90 mx-auto max-w-prose">
            <Fragment
              set:html={marked.parse(aboutPage.data.whatIDoNow.content)}
            />
          </div>
        </div>
      </section>
    )
  }

  <!-- Mid-page CTA (after What I do now) -->
  <section class="px-content mt-40 mb-8">
    <div class="mx-auto max-w-7xl">
      <div
        class="border-border/20 rounded-lg border bg-white/80 p-8 text-center shadow-[0_4px_16px_0_rgba(31,38,135,0.1)] backdrop-blur-md md:p-10"
      >
        <p class="text-foreground mb-6 text-2xl leading-relaxed font-semibold">
          Have something in mind?
        </p>
        <a href="/contact" class="button button-primary button-lg">
          Talk through your project
        </a>
      </div>
    </div>
  </section>

  <!-- How I Work/Partner Section -->
  {
    aboutPage?.data?.howIPartner && (
      <BulletList
        title={aboutPage.data.howIPartner.title}
        items={aboutPage.data.howIPartner.items}
        variant="numbered"
      />
    )
  }

  <!-- Testimonials Section (after How I partner) -->
  {
    aboutPage?.data?.testimonials && aboutPage.data.testimonials.length > 0 && (
      <section class="px-content mt-40 mb-8">
        <div class="mx-auto max-w-7xl">
          <Testimonial
            quote={t.quote}
            name={t.name}
            role={t.role}
            org={t.org}
            className="card"
            avatarUrl={
              t.avatar
                ? getContentImageUrl('sites/portfolio', 'about-page', t.avatar)
                : undefined
            }
            variant="dark"
          />
        </div>
      </section>
    )
  }

  <!-- Stories Section -->
  {
    aboutPage?.data?.stories && aboutPage.data.stories.length > 0 && (
      <section class="px-content mt-40 mb-16">
        <div class="mx-auto max-w-7xl">
          <div
            class={`grid gap-6 ${aboutPage.data.stories.length === 1 ? 'mx-auto max-w-4xl grid-cols-1' : 'grid-cols-1 md:grid-cols-2'}`}
          >
            {aboutPage.data.stories.map((story: any) => (
              <div
                class={`border-border/20 bg-card/20 rounded-lg border p-6 shadow-[0_2px_8px_0_rgba(31,38,135,0.1)] backdrop-blur-md md:p-8 ${aboutPage.data.stories.length === 1 ? 'mx-auto' : ''}`}
              >
                <div class="text-foreground/60 font-semibold tracking-wider uppercase">
                  Case note
                </div>
                <h3 class="font-heading text-foreground mt-2 mb-4 text-2xl tracking-tight uppercase">
                  {story.headline}
                </h3>
                <div class="prose prose-lg prose-headings:text-foreground prose-p:text-foreground/90 prose-strong:text-foreground prose-em:text-foreground/90 max-w-none">
                  <Fragment set:html={marked.parse(story.content)} />
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>
    )
  }

  <!-- Principles Section -->
  {
    aboutPage?.data?.principles && (
      <BulletList
        title={aboutPage.data.principles.title}
        items={aboutPage.data.principles.items}
        variant="bulleted"
      />
    )
  }

  <!-- Fit Section & How to start -->
  {
    aboutPage?.data?.fit && (
      <section class="px-content mt-40 mb-8">
        <div class="mx-auto max-w-7xl">
          <div class="grid grid-cols-1 gap-6 md:grid-cols-2">
            <div class="border-border/20 bg-card/20 rounded-lg border p-6 text-center shadow-[0_2px_8px_0_rgba(31,38,135,0.1)] backdrop-blur-md md:p-8 md:text-left">
              <h3 class="font-heading text-foreground mb-4 text-2xl tracking-tight uppercase">
                Best fit
              </h3>
              <div class="prose prose-lg prose-headings:text-foreground prose-p:text-foreground/80 prose-strong:text-foreground prose-em:text-foreground/90 prose-ul:text-foreground/80 prose-li:text-foreground/80 mx-auto max-w-prose text-left">
                <Fragment set:html={marked.parse(aboutPage.data.fit.bestFit)} />
              </div>
            </div>
            {aboutPage?.data?.howToStart && (
              <div class="border-border/20 bg-card/20 rounded-lg border p-6 text-center shadow-[0_2px_8px_0_rgba(31,38,135,0.1)] backdrop-blur-md md:p-8 md:text-left">
                <h3 class="font-heading text-foreground mb-4 text-2xl tracking-tight uppercase">
                  {aboutPage.data.howToStart.title}
                </h3>
                <ul class="text-foreground/90 space-y-3 text-left">
                  {aboutPage.data.howToStart.items.map((item: any) => (
                    <li class="flex items-start gap-3">
                      <span class="text-foreground mt-2 text-sm">â€¢</span>
                      <div>
                        <div class="font-medium">{item.title}</div>
                        <div class="text-foreground/80 mt-1 text-sm">
                          <Fragment set:html={marked.parse(item.content)} />
                        </div>
                      </div>
                    </li>
                  ))}
                </ul>
              </div>
            )}
          </div>
        </div>
      </section>
    )
  }
</HeroLayout>

<style>
  /* Custom ordered list styling */
  ol {
    counter-reset: item;
  }

  ol > li {
    counter-increment: item;
  }

  ol > li::marker {
    content: counter(item, decimal-leading-zero);
    font-weight: bold;
    color: var(--color-foreground);
  }
</style>
