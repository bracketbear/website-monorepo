---
import { DetailBlock, type Breadcrumb } from '@bracketbear/core';
import { getCollection } from 'astro:content';
import ContentLayout from '@/layouts/ContentLayout.astro';
import { getAboutBreadcrumbs } from '@/config/breadcrumbs';

const breadcrumbs: Breadcrumb[] = getAboutBreadcrumbs();

// Get the about page singleton (following the same pattern as index.astro)
const aboutPageEntries = await getCollection('portfolioAboutPage');
const aboutPage = aboutPageEntries[0]; // Singletons have only one entry

console.log('About page data:', aboutPage?.data);

const details: {
  label: string;
  value: string[];
}[] = aboutPage?.data?.detailBlocks || [
  {
    label: 'Specialties & Services',
    value: [
      'Full Stack Software Engineering',
      'Experiential Content Management Systems Development',
      'Experiential Software Development and Integrations',
      'Software/System Architecture & Design',
    ],
  },
  {
    label: 'Technical Qualifications',
    value: [
      '10+ Years Experience',
      'Wide Range of Technical Skills',
      'Proven Adaptability & Problem Solving',
      'Self-Taught A.F.',
    ],
  },
  {
    label: 'Work Ethic & Values',
    value: [
      'Pragmatic & Results-Oriented',
      'Radical Candor',
      'Continuous Improvement & Learning',
    ],
  },
  {
    label: 'Non-Technical Experience',
    value: [
      '2+ Years of Management Experience',
      '4 Years of Business Development Experience',
      '4 Years of Graphic Design Experience',
    ],
  },
];
---

<ContentLayout title="About Me" breadcrumbs={breadcrumbs}>
  {
    details.map((detail) => (
      <DetailBlock slot="detail-blocks" label={detail.label}>
        <ul slot="value" class="list-outside list-disc">
          {detail.value.map((value) => (
            <li class="ml-4">{value}</li>
          ))}
        </ul>
      </DetailBlock>
    ))
  }

  <!-- Mission Statement -->
  {
    aboutPage?.data?.missionStatement && (
      <div class="mb-12">
        <div class="card">
          <h2 class="font-heading text-brand-dark mb-6 text-4xl tracking-tight">
            {aboutPage.data.missionStatement.title}
          </h2>
          <div class="text-brand-dark space-y-4 text-xl leading-relaxed font-medium">
            {aboutPage.data.missionStatement.paragraphs.map(
              (paragraph: string) => (
                <p>{paragraph}</p>
              )
            )}
          </div>
        </div>
      </div>
    )
  }

  <!-- Personal Story Section -->
  {
    aboutPage?.data?.personalStory && (
      <div class="mb-12">
        <div class="card">
          <h2 class="font-heading text-brand-dark mb-6 text-4xl tracking-tight">
            {aboutPage.data.personalStory.title}
          </h2>
          <div class="text-brand-dark space-y-6 text-xl leading-relaxed font-medium">
            {aboutPage.data.personalStory.paragraphs.map(
              (paragraph: string) => (
                <p>{paragraph}</p>
              )
            )}
          </div>
        </div>
      </div>
    )
  }

  <!-- Work Philosophy -->
  {
    aboutPage?.data?.workPhilosophy && (
      <div class="mb-12">
        <div class="grid grid-cols-1 gap-8 md:grid-cols-2">
          <div class="card">
            <h3 class="font-heading text-brand-dark mb-4 text-2xl tracking-tight">
              {aboutPage.data.workPhilosophy.whatIDo.title}
            </h3>
            <ol class="text-brand-dark list-inside list-decimal space-y-3 text-lg font-medium [&>li]:flex [&>li]:items-start [&>li]:gap-3">
              {aboutPage.data.workPhilosophy.whatIDo.items.map(
                (item: any, index: number) => (
                  <li>
                    <span class="bg-brand-dark text-brand-light min-w-[2rem] px-2 py-1 text-center text-sm font-bold">
                      {item.number || String(index + 1).padStart(2, '0')}
                    </span>
                    {item.text}
                  </li>
                )
              )}
            </ol>
          </div>

          <div class="card">
            <h3 class="font-heading text-brand-dark mb-4 text-2xl tracking-tight">
              {aboutPage.data.workPhilosophy.howIWork.title}
            </h3>
            <ol class="text-brand-dark list-inside list-decimal space-y-3 text-lg font-medium [&>li]:flex [&>li]:items-start [&>li]:gap-3">
              {aboutPage.data.workPhilosophy.howIWork.items.map(
                (item: any, index: number) => (
                  <li>
                    <span class="bg-brand-dark text-brand-light min-w-[2rem] px-2 py-1 text-center text-sm font-bold">
                      {item.number || String(index + 1).padStart(2, '0')}
                    </span>
                    {item.text}
                  </li>
                )
              )}
            </ol>
          </div>
        </div>
      </div>
    )
  }
</ContentLayout>

<style>
  /* Custom ordered list styling */
  ol {
    counter-reset: item;
  }

  ol > li {
    counter-increment: item;
  }

  ol > li::marker {
    content: counter(item, decimal-leading-zero);
    font-weight: bold;
    color: var(--color-brand-dark);
  }
</style>
