---
import { getCollection } from "astro:content";
import type { GetStaticPaths } from "astro";
import Layout from "@/layouts/Layout.astro";
import { getKeyedCollection } from "@/utils/content";
import { getImage, Image } from "astro:assets";
import { SkillPill } from "@bracketbear/core";
import { breadcrumbMap, getWorkBreadcrumbs } from "@/config/breadcrumbs";

export const getStaticPaths: GetStaticPaths = async () => {
  const workProjects = await getCollection("workProject");
  return workProjects.map((project) => ({
    params: { workProject: project.id },
  }));
};

const workJobs = await getCollection("workJobs");
const workSkills = await getCollection("workSkills");
const workProjects = await getCollection("workProject");
const workCompanies = await getKeyedCollection("workCompany");
const projectCategories = await getCollection("workProjectCategory");

const workProject = workProjects.find(
  (project) => project.id === Astro.params.workProject
);

if (workProject === undefined) {
  throw new Error(`Project not found: ${Astro.params.workProject}`);
}

// Get related data
const job = workJobs.find((job) => job.id === workProject.data.job);
const category = projectCategories.find(
  (category) => category.id === workProject.data.category
);
const projectSkills = workSkills.filter((skill) =>
  (workProject.data.skills ?? []).includes(skill.id)
);
const companyTitle =
  job !== undefined ? workCompanies[job.data.company].data.title : "Unknown";

const breadcrumbs = getWorkBreadcrumbs({ label: workProject.data.title });
---

<Layout breadcrumbs={breadcrumbs}>
  <title>{workProject.data.title} | Harrison Callahan</title>

  <!-- Hero Section -->
  <div class="bg-brand-light py-20 border-b-8 border-black">
    <div class="container mx-auto px-6">
      <div
        class="border-8 border-black bg-brand-yellow p-8 mb-4 flex flex-col gap-2"
        style="box-shadow: 0 0 0 8px #fff, 0 0 0 16px #000;"
      >
        <h1
          class="text-[8vw] leading-[0.85] font-black uppercase text-brand-dark tracking-tight -mb-4"
          style="word-break: break-word;"
        >
          {workProject.data.title}
        </h1>
        {
          category !== undefined && (
            <span class="text-2xl font-black uppercase text-brand-red bg-black px-4 py-2 inline-block border-4 border-brand-red self-start mt-2">
              {category.data.title}
            </span>
          )
        }
      </div>
      <p
        class="inter text-2xl text-brand-dark font-medium max-w-3xl mb-2 leading-relaxed"
      >
        {workProject.data.summary || workProject.data.description}
      </p>
    </div>
  </div>

  <!-- Project Info Bar -->
  <div class="bg-black text-brand-light border-b-8 border-black">
    <div class="container mx-auto px-6">
      <div class="flex flex-wrap gap-12 py-8 border-b-4 border-brand-yellow">
        {
          job !== undefined && (
            <div>
              <h4 class="text-brand-yellow mb-2 text-lg font-black uppercase tracking-widest">
                COMPANY
              </h4>
              <p class="text-2xl text-brand-light font-black uppercase">
                {companyTitle}
              </p>
            </div>
          )
        }
        <div>
          <h4
            class="text-brand-yellow mb-2 text-lg font-black uppercase tracking-widest"
          >
            DURATION
          </h4>
          <p class="text-2xl text-brand-light font-black uppercase">
            {workProject.data.duration}
          </p>
        </div>
        {
          workProject.data.isFeatured === true && (
            <div class="ml-auto self-center">
              <span class="text-lg font-black uppercase text-black bg-brand-yellow px-4 py-2 border-4 border-black">
                FEATURED
              </span>
            </div>
          )
        }
      </div>
    </div>
  </div>

  <!-- Main Content -->
  <div class="bg-brand-light py-16">
    <div class="container mx-auto px-6 grid md:grid-cols-3 gap-12">
      <!-- Main Column -->
      <div class="space-y-12 md:col-span-2">
        <!-- Overview -->
        {
          workProject.data.description?.trim() !== "" && (
            <section class="border-8 border-black bg-white p-8">
              <h2 class="text-5xl font-black uppercase text-brand-red mb-4">
                OVERVIEW
              </h2>
              <p class="inter text-xl text-brand-dark leading-relaxed">
                {workProject.data.description}
              </p>
            </section>
          )
        }
        <!-- Challenges & Solutions -->
        {
          workProject.data.challengesAndSolutions?.trim() !== "" && (
            <section class="border-8 border-black bg-brand-yellow p-8">
              <h2 class="text-5xl font-black uppercase text-black mb-4">
                CHALLENGES & SOLUTIONS
              </h2>
              <p class="inter text-xl text-brand-dark leading-relaxed">
                {workProject.data.challengesAndSolutions}
              </p>
            </section>
          )
        }
        <!-- Results -->
        {
          workProject.data.resultsAchieved?.trim() !== "" && (
            <section class="border-8 border-black bg-brand-green p-8">
              <h2 class="text-5xl font-black uppercase text-black mb-4">
                RESULTS ACHIEVED
              </h2>
              <p class="inter text-xl text-brand-dark leading-relaxed">
                {workProject.data.resultsAchieved}
              </p>
            </section>
          )
        }
        <!-- Media Gallery -->
        {
          (workProject.data.media ?? []).length > 0 && (
            <section class="border-8 border-black bg-white p-8">
              <h2 class="text-5xl font-black uppercase text-brand-blue mb-4">
                PROJECT GALLERY
              </h2>
              {workProject.data.mediaDescription !== undefined && (
                <p class="inter text-lg text-brand-dark mb-6 leading-relaxed">
                  {workProject.data.mediaDescription}
                </p>
              )}
              <div class="grid grid-cols-2 gap-4 md:grid-cols-3">
                {(workProject.data.media ?? []).map(async (imageUrl) => {
                  return (
                    <div class="border-4 border-black aspect-video overflow-hidden bg-brand-blue/10 flex items-center justify-center">
                      TODO: Add image
                    </div>
                  );
                })}
              </div>
            </section>
          )
        }
      </div>
      <!-- Sidebar -->
      <aside class="space-y-8">
        {/* Job Info */}
        {
          job !== undefined && (
            <div class="border-8 border-black bg-brand-yellow p-8">
              <h3 class="text-3xl font-black uppercase text-black mb-4">
                ROLE INFO
              </h3>
              <p class="text-xl text-brand-dark mb-4 font-black">
                {job.data.title} at {companyTitle}
              </p>
              {job.data.description?.trim() !== "" && (
                <p class="inter text-lg text-brand-dark leading-relaxed">
                  {job.data.description}
                </p>
              )}
            </div>
          )
        }
        {/* Skills */}
        {
          projectSkills.length > 0 && (
            <div class="border-8 border-black bg-white p-8">
              <h3 class="text-3xl font-black uppercase text-brand-blue mb-4">
                TECHNOLOGIES USED
              </h3>
              <div class="flex flex-wrap gap-2">
                {projectSkills.map((skill) => (
                  <SkillPill variant="default" size="sm">
                    {skill.data.title}
                  </SkillPill>
                ))}
              </div>
            </div>
          )
        }
        {/* Call to Action */}
        <div class="border-8 border-black bg-brand-red p-8">
          <h3 class="text-3xl font-black uppercase text-brand-light mb-4">
            INTERESTED IN SIMILAR WORK?
          </h3>
          <p class="inter text-lg text-brand-light mb-6 leading-relaxed">
            I'd love to discuss how I can help with your project.
          </p>
          <a
            href="/contact"
            class="text-xl font-black uppercase text-brand-red bg-brand-light border-4 border-black px-6 py-3 block text-center hover:bg-brand-yellow transition-colors"
            >Get in Touch</a
          >
        </div>
      </aside>
    </div>
  </div>
</Layout>
