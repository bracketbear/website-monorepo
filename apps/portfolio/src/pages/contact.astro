---
import { getCollection } from 'astro:content';
import { getContactBreadcrumbs } from '@/config/breadcrumbs';
import HeroLayout from '@/layouts/HeroLayout.astro';
import ContactForm from '@/components/ContactForm';
import { Stats, ContactIcon } from '@bracketbear/core/react';
import { marked } from 'marked';

// Get the contact page singleton from CMS
const contactPageEntries = await getCollection('portfolioContactPage');
const contactPage = contactPageEntries[0]; // Singletons have only one entry
const contactMethods = await getCollection('portfolioContactMethods');

const breadcrumbs = getContactBreadcrumbs();

// Helper function to parse markdown content
function parseMarkdown(content: string): string {
  return marked.parse(content) as string;
}

// Prepare stats data from quick info
const statsData =
  contactPage.data.quickInfo?.map((info: { label: string; value: string }) => ({
    label: info.label,
    value: info.value,
  })) || [];

// Get contact methods in the order specified by CMS
const selectedContactMethods =
  contactPage.data.contactMethods
    ?.map((methodId: string) =>
      contactMethods.find((method) => method.id === methodId)
    )
    .filter(Boolean) || [];
---

<HeroLayout
  pageTitle={contactPage.data.title}
  title={contactPage.data.title}
  subtitle={contactPage.data.subtitle}
  breadcrumbs={breadcrumbs}
  animationPreset="curious-particle-network"
  metaDescription={contactPage.data.metaDescription}
>
  <!-- Introduction Section -->
  <section class="mb-40 px-6">
    <div class="container mx-auto text-center">
      <h2 class="font-heading mb-6 text-4xl tracking-tight text-white">
        {contactPage.data.introduction.title}
      </h2>
    </div>
    <div class="container mx-auto mt-8">
      <div
        class="prose prose-lg prose-headings:text-white prose-p:text-white/90 text-xl leading-relaxed text-white/90"
      >
        <div set:html={parseMarkdown(contactPage.data.introduction.content)} />
      </div>
    </div>
  </section>

  <!-- Stats Section -->
  {
    statsData.length > 0 && (
      <Stats
        stats={statsData}
        className="relative z-10 -mt-40 mb-16 drop-shadow-xl drop-shadow-black/30"
      />
    )
  }

  <!-- Main Contact Section -->
  <section class="mb-40 px-6">
    <div class="container mx-auto">
      <div
        class="grid items-start gap-8 rounded-3xl bg-blue-600/40 p-2 lg:grid-cols-2"
      >
        <!-- Contact Information -->
        <div class="space-y-8 px-6 py-10">
          <div>
            <h2
              class="font-heading mb-6 text-3xl tracking-tight text-white uppercase"
            >
              GET IN TOUCH
            </h2>
            <div class="space-y-4 text-lg font-medium">
              {
                selectedContactMethods.map((method: any) => (
                  <a
                    href={method.data.value}
                    class="hover:text-brand-orange flex items-center gap-3 text-white/90 transition-colors"
                  >
                    <span class="text-2xl">
                      <ContactIcon name={method.data.icon} />
                    </span>
                    <span>{method.data.label}</span>
                  </a>
                ))
              }
            </div>
          </div>

          <!-- Quick Info -->
          {
            contactPage.data.quickInfo &&
              contactPage.data.quickInfo.length > 0 && (
                <div class="border-t border-white/20 pt-6">
                  <div class="space-y-3 text-lg font-medium">
                    {contactPage.data.quickInfo.map(
                      (info: { label: string; value: string }) => (
                        <div class="flex justify-between">
                          <span class="text-white/70">{info.label}:</span>
                          <span class="text-brand-orange font-bold">
                            {info.value}
                          </span>
                        </div>
                      )
                    )}
                  </div>
                </div>
              )
          }
        </div>

        <!-- Contact Form -->
        <div class="card pt-10">
          <h3 class="font-heading mb-6 text-2xl tracking-tight uppercase">
            {contactPage.data.contactForm.title}
          </h3>
          <div class="text-brand-dark mb-6 text-lg leading-relaxed font-medium">
            <p>{contactPage.data.contactForm.description}</p>
          </div>
          <ContactForm client:load />
        </div>
      </div>
    </div>
  </section>
</HeroLayout>
