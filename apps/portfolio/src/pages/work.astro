---
import { type Breadcrumb, Stats } from '@bracketbear/core';
import { getCollection } from 'astro:content';
import { getWorkBreadcrumbs } from '@/config/breadcrumbs';
import HeroLayout from '@/layouts/HeroLayout.astro';
import FilteredWorkHistory from '@/components/FilteredWorkHistory';
import { marked } from 'marked';

const breadcrumbs: Breadcrumb[] = getWorkBreadcrumbs();

// Get the work page singleton from CMS
const workPageEntries = await getCollection('portfolioWorkPage');
const workPage = workPageEntries[0]; // Singletons have only one entry

// Get all work collections for the FilteredWorkHistory component
const workProjects = await getCollection('workProject');
const workSkills = await getCollection('workSkills');
const workJobs = await getCollection('workJobs');
const workCompanies = await getCollection('workCompany');

// Get skill categories from the work page singleton and fetch their full data
const skillCategorySlugs = workPage.data.skillCategories || [];
const skillCategories = await getCollection('workSkillCategory');

// Create ordered skill categories with their associated skills
const orderedSkillCategories = skillCategorySlugs
  .map((slug: string) => {
    const category = skillCategories.find((cat) => cat.id === slug);
    if (!category) return null;

    // Get skills that belong to this category
    const categorySkills = workSkills.filter(
      (skill) => skill.data.category === category.id
    );

    return {
      ...category,
      skills: categorySkills,
    };
  })
  .filter(Boolean); // Remove any undefined entries

// Helper function to parse markdown content
function parseMarkdown(content: string): string {
  return marked.parse(content) as string;
}
---

<HeroLayout
  pageTitle="Work History"
  title={workPage.data.title}
  subtitle={workPage.data.subtitle}
  breadcrumbs={breadcrumbs}
  animationPreset="retro-grid"
  contactCTA={workPage.data.contactCTA}
  metaDescription={workPage.data.metaDescription}
  currentPage="work"
>
  <!-- Introduction Section -->
  <section class="px-content mb-8">
    <div class="container mx-auto text-center">
      <div
        class="prose prose-xl prose-headings:text-text-primary prose-p:text-text-primary/90 text-text-primary/90 mx-auto max-w-prose text-center"
        set:html={parseMarkdown(workPage.data.introduction)}
      />
    </div>
  </section>

  <!-- Stats Section (if available) -->
  {
    workPage.data.stats && workPage.data.stats.length > 0 && (
      <Stats stats={workPage.data.stats} className="mb-8 mx-2 md:mx-0" />
    )
  }

  <!-- Work History Section -->
  <div class="px-content mb-8">
    <FilteredWorkHistory
      skills={workSkills}
      skillCategories={orderedSkillCategories}
      jobs={workJobs}
      projects={workProjects}
      companies={workCompanies}
      client:load
    />
  </div>
</HeroLayout>
