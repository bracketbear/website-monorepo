---
interface Props {
  id: string;
  title?: string;
  subtitle?: string;
  variant?: "default" | "plus" | "arrow";
  className?: string;
  transparent?: boolean;
}

const {
  id,
  title,
  subtitle,
  variant = "default",
  className = "",
  transparent = false,
} = Astro.props;

const hasDefaultTitles = title || subtitle;
---

<div
  class:list={[
    "collapse-arrow border-base-300 bg-base-200 rounded-box collapse border",
    transparent ? "bg-transparent" : "",
    className,
  ]}
  tabindex="0"
>
  <div class:list={["collapse-title", `text-${variant}`]}>
    {
      hasDefaultTitles && !Astro.slots.has("button-content") && (
        <div class="flex items-center justify-between">
          <div>{title}</div>
          <div>{subtitle}</div>
        </div>
      )
    }

    {Astro.slots.has("button-content") && <slot name="button-content" />}
  </div>
  <div class="collapse-content">
    <slot />
  </div>
</div>

<style>
  .text-plus .collapse-title::after {
    content: "+";
  }
  .text-plus.collapse-open .collapse-title::after {
    content: "-";
  }

  .text-arrow .collapse-title::after {
    content: "▼";
    font-size: 0.75rem;
  }
  .text-arrow.collapse-open .collapse-title::after {
    content: "▲";
    font-size: 0.75rem;
  }
</style>
