{
  "title": "About",
  "subtitle": "I build full-stack tools for experiential teams. I like clear problems, steady progress, and work people can rely on.",
  "metaDescription": "About Harrison Callahan — self-taught developer building full-stack tools for experiential teams; practical, collaborative, and reliability-focused.",
  "narrative": {
    "title": "My Story",
    "content": "Hey there! I'm Harrison. I've been working on the web in some form or another since high school. My first real break was at Polich Art Works—an art foundry that took a chance on a kid who's only selling point was that he could use a computer. That path moved me from Dreamweaver and Photoshop to Flash and ActionScript, and eventually into building things because someone needed them.\n\nLater, working at a brewery, we needed a monthly newsletter. I taught myself PHP, built a very rough sender, and then moved us to Mailchimp. I wrote a WordPress theme and a couple of plugins to manage menus. None of it was glamorous, but it worked—and it taught me that good software starts with a real need and gets better in public.\n\nFeeling stuck a few years in, I took a three-month Laravel contract with an experiential shop. Seeing a museum app driving content on a wall flipped a switch: this wasn't just websites—it was the systems that let creative teams do their jobs without fighting the tools. I pushed for the full-time role, got it, and never looked back. Since then I've spent years in experiential—Downstream, Deeplocal—building management software, smoothing handoffs, and making the unglamorous parts dependable. I'm self-taught, practical, and happiest when the work helps a team breathe easier."
  },
  "whatIDoNow": {
    "title": "What I do now",
    "content": "I design and build the systems behind interactive work: content and device management, scheduling, tooling, and the small frameworks that keep everything sane. I like projects with clear ownership and a real outcome attached.\n\nI'm open to full-time roles, and I also partner with agencies and collaborators. Either way, the goal is the same: make the work easier to run tomorrow than it was today."
  },
  "howIPartner": {
    "title": "How I partner (clarity first)",
    "items": [
      "Agree on the problem, decision-makers, and timeline up front.",
      "Write things down: short docs, in-code notes, shared checklists.",
      "Build the smallest useful version, then add what earns its place.",
      "Organize projects so they help you later: modular code, a shared core, sensible boundaries.",
      "Communicate candidly and respectfully. If something's unclear, I'll ask early.",
      "Prefer in-person when possible; otherwise async is fine. Pacific time, flexible."
    ]
  },
  "stories": [
    {
      "headline": "Keeping the promise",
      "content": "A client-promised feature was drifting. I asked to own the priorities for a week and wrote a short plan: what actually had to ship, what could wait, and who made the final call. We re-sequenced work so integration and QA happened earlier, and cut two nice-to-haves that weren’t on the critical path.\n\nI ran a 15-minute daily check-in, kept notes visible to the whole team, and made decisions where ownership was fuzzy. We delivered on the date with no late-night scrambles—and the team got their weekend back."
    },
    {
      "headline": "Prototype to direction",
      "content": "A partner team couldn’t get our platform talking to their TouchDesigner pipeline. After a few circular threads, I flew out, sat with them, and mapped a minimal path. On the flight home I wrote a rough TD plugin in Python that mapped content cues to operators—ugly but alive.\n\nThat demo unblocked their team and gave leadership a clear next step. We shifted the quarter to building the plugin properly and made integrations straightforward after that."
    }
  ],
  "principles": {
    "title": "What I care about",
    "items": [
      "Plain language and honest timelines",
      "Maintainable systems over clever detours",
      "Accessibility by default",
      "Calm teams: clear notes, clear ownership, fewer surprises",
      "Share what I learn so others can move faster"
    ]
  },
  "fit": {
    "bestFit": "Teams that know the outcome they need and value candid, respectful communication. Clear ownership, realistic timelines, and steady progress."
  },
  "howToStart": {
    "title": "How to start",
    "items": [
      "Share a repo, problem statement, or Figma",
      "One 25-minute call to align",
      "I return a short plan with options"
    ]
  },
  "timeline": [
    {
      "label": "Polich Art Works",
      "sublabel": "first real break",
      "description": "Hired on the strength of \"I can use a computer.\" From Dreamweaver/Photoshop to Flash/ActionScript—learned to build because someone needed it."
    },
    {
      "label": "Brewery tools",
      "sublabel": "self-taught builder",
      "description": "Wrote a PHP newsletter sender, moved the team to Mailchimp, and built a WordPress theme with plugins for menus. Not glamorous—reliable."
    },
    {
      "label": "Experiential full-time",
      "sublabel": "Downstream → Deeplocal",
      "description": "Took a Laravel contract, saw a museum app running on a wall, and realized this was the work. Moved into experiential management software and never looked back."
    }
  ],
  "testimonials": [
    {
      "quote": "Harrison brings calm structure. He makes decisions easy and the work predictable.",
      "name": "First Last",
      "role": "Producer",
      "org": "Experiential Agency"
    },
    {
      "quote": "Give him the problem and he’ll return with a plan, a prototype, and clear next steps.",
      "name": "First Last",
      "role": "Technical Director",
      "org": "Interactive Studio"
    }
  ],
  "contactCTA": {
    "text": "Based in Pacific time; remote-friendly, and travel is fine when it helps. Have a repo, problem statement, or a Figma you want to walk through? Send it over and let's talk.",
    "buttonText": "Start a conversation",
    "buttonLink": "/reach-out"
  }
}
