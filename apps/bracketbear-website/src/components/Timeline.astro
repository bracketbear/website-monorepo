---
interface Props {
  orientation?: 'vertical' | 'horizontal';
  flow?: 'start' | 'end' | 'alternating';
}

const orientationValue = Astro.props.orientation ?? 'vertical';
const flow = Astro.props.flow ?? 'start';
---

<div class="@container relative py-8">
  <div
    class="timeline-line absolute inset-y-0 left-1/2 w-[2px] -translate-x-1/2"
  >
    <div
      class="h-full bg-gradient-to-b from-transparent via-indigo-300/30 to-transparent"
    >
    </div>
  </div>

  <ul
    class:list={[
      'relative flex list-none p-0',
      {
        'flex-row': orientationValue === 'horizontal',
        'flex-col': orientationValue === 'vertical',
        'timeline-horizontal': orientationValue === 'horizontal',
        'timeline-vertical': orientationValue === 'vertical',
        'timeline-start': flow === 'start',
        'timeline-end': flow === 'end',
        'timeline-alternating': flow === 'alternating',
      },
      'gap-16',
    ]}
    data-flow={flow}
  >
    <slot />
  </ul>
</div>

<style>
  /* Timeline positioning classes */
  :global(.timeline-item-start) {
    display: flex;
    justify-content: flex-end;
    padding-right: 50%;
    padding-left: 0;
  }

  :global(.timeline-item-end) {
    display: flex;
    justify-content: flex-start;
    padding-left: 50%;
    padding-right: 0;
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .timeline-line {
      left: 1.5rem;
    }

    :global(.timeline-item-start),
    :global(.timeline-item-end) {
      justify-content: flex-start;
      padding-left: 3rem;
      padding-right: 1rem;
    }
  }
</style>

<script>
  // Handle positioning of timeline items based on flow
  document.addEventListener('astro:page-load', () => {
    document
      .querySelectorAll('.timeline-vertical, .timeline-horizontal')
      .forEach((timeline) => {
        const flow = timeline.getAttribute('data-flow');
        const items = timeline.querySelectorAll('li');

        items.forEach((item, index) => {
          if (flow === 'start') {
            item.classList.add('timeline-item-start');
          } else if (flow === 'end') {
            item.classList.add('timeline-item-end');
          } else if (flow === 'alternating') {
            item.classList.add(
              index % 2 === 0 ? 'timeline-item-start' : 'timeline-item-end'
            );
          }
        });
      });
  });
</script>
