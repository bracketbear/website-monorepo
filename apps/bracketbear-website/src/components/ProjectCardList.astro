---
import { getCollection } from 'astro:content';
import { getKeyedCollection } from '@/utils/content';
import { getProjectUrl, objectEntries } from '@bracketbear/core';
import ProjectCard, { type ProjectCardProps } from './ProjectCard';

interface Props {
  variant?: ProjectCardProps['variant'];
}

const { variant = 'default' }: Props = Astro.props;

const workProjects = await getCollection('workProject');
const workSkillsById = await getKeyedCollection('workSkills');
const workProjectCatergoriesById = await getKeyedCollection(
  'workProjectCategory'
);
const workSkills = await getCollection('workSkills');
const workProjectsByType = workProjects.reduce<
  Record<string, typeof workProjects>
>((acc, project) => {
  const { data } = project;
  const { category } = data;
  if (category === undefined) {
    return acc;
  }

  if (!(category in acc)) {
    acc[category] = [];
  }

  acc[category].push(project);
  return acc;
}, {});
---

<div class="relative z-10 space-y-16">
  {
    objectEntries(workProjectsByType).map(([type, projects]) => (
      <div>
        <h2 class="border-default bg-background text-foreground mb-8 inline-block p-4 text-2xl font-black uppercase">
          {workProjectCatergoriesById[type].data.title}
        </h2>
        <div class="grid gap-8 md:grid-cols-2">
          {projects.map((project) => (
            <ProjectCard
              project={project}
              skills={workSkills}
              variant={variant}
            />
          ))}
        </div>
      </div>
    ))
  }
</div>
